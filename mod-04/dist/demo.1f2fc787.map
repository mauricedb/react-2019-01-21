{"version":3,"sources":["src/demo.js"],"names":["createIncrement","value","incrementAction","type","payload","by","listeners","store","counter","name","Object","freeze","dispatch","action","assign","forEach","l","push","s","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,eAAT,GAAoC;AAAA,MAAXC,KAAW,uEAAH,CAAG;AAClC,MAAMC,eAAe,GAAG;AACtBC,IAAAA,IAAI,EAAE,WADgB;AAEtBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAEJ;AAAN;AAFa,GAAxB;AAIA,SAAOC,eAAP;AACD;;AAED,IAAII,SAAS,GAAG,EAAhB;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,CADC;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKAC,MAAM,CAACC,MAAP,CAAcJ,KAAd;;AAEA,SAASK,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,UAAQA,MAAM,CAACV,IAAf;AACE,SAAK,WAAL;AACE;AACAI,MAAAA,KAAK,GAAGG,MAAM,CAACI,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC/BC,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBK,MAAM,CAACT,OAAP,CAAeC;AADT,OAAzB,CAAR;AAGAK,MAAAA,MAAM,CAACC,MAAP,CAAcJ,KAAd;AACA;;AACF;AARF;;AAWAD,EAAAA,SAAS,CAACS,OAAV,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACT,KAAD,CAAL;AAAA,GAAnB;AACD;;AAEDD,SAAS,CAACW,IAAV,CAAe,UAAAC,CAAC;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B,CAAJ;AAAA,CAAhB;AAEAN,QAAQ,CAACZ,eAAe,CAAC,CAAD,CAAhB,CAAR;AAEAM,SAAS,CAACW,IAAV,CAAe,UAAAC,CAAC;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B,CAAJ;AAAA,CAAhB;AAEAN,QAAQ,CAACZ,eAAe,EAAhB,CAAR","file":"demo.1f2fc787.map","sourceRoot":"..","sourcesContent":["function createIncrement(value = 1) {\r\n  const incrementAction = {\r\n    type: 'increment',\r\n    payload: { by: value }\r\n  };\r\n  return incrementAction;\r\n}\r\n\r\nlet listeners = [];\r\n\r\nlet store = {\r\n  counter: 0,\r\n  name: 'Maurice'\r\n};\r\n\r\nObject.freeze(store);\r\n\r\nfunction dispatch(action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      //   store.counter += action.payload.by;\r\n      store = Object.assign({}, store, {\r\n        counter: store.counter + action.payload.by\r\n      });\r\n      Object.freeze(store);\r\n      break;\r\n    default:\r\n  }\r\n\r\n  listeners.forEach(l => l(store))\r\n}\r\n\r\nlisteners.push(s => console.log('Listener one', s));\r\n\r\ndispatch(createIncrement(5));\r\n\r\nlisteners.push(s => console.log('Listener two', s));\r\n\r\ndispatch(createIncrement());"]}