{"version":3,"sources":["src/actions.js","src/store.js","src/demo.js"],"names":["createIncrementAction","value","action","type","payload","error","store","counter","name","listeners","subscribe","listener","push","filter","l","dispatch","console","log","forEach","unsub","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,qBAAT,GAA0C;AAAA,MAAXC,KAAW,uEAAH,CAAG;AAC7C,MAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,WADO;AAEbC,IAAAA,OAAO,EAAE;AACPH,MAAAA,KAAK,EAAEA;AADA,KAFI;AAKbI,IAAAA,KAAK,EAAE;AALM,GAAf;AAOA,SAAOH,MAAP;AACD;;;;;;;;;;;;;;ACTH,IAAII,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,CADC;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKA,IAAIC,SAAS,GAAG,EAAhB;;AAEO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAClCF,EAAAA,SAAS,CAACG,IAAV,CAAeD,QAAf;AAEA,SAAO;AAAA,WAAOF,SAAS,GAAGA,SAAS,CAACI,MAAV,CAAiB,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKH,QAAV;AAAA,KAAlB,CAAnB;AAAA,GAAP;AACD;;AAEM,SAASI,QAAT,CAAkBb,MAAlB,EAA0B;AAC/Bc,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,MAAxB;;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACA;AAEA;AACA;AACA;AAEAG,IAAAA,KAAK,qBAAQA,KAAR;AAAeC,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBL,MAAM,CAACE,OAAP,CAAeH;AAAvD,MAAL;AACD;;AAEDQ,EAAAA,SAAS,CAACS,OAAV,CAAkB,UAAAJ,CAAC;AAAA,WAAIA,CAAC,CAACR,KAAD,CAAL;AAAA,GAAnB;AACD;;;;AC5BD;;AACA;;AAEA,IAAMa,KAAK,GAAG,sBAAU,UAAAC,KAAK;AAAA,SAAIJ,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B,CAAJ;AAAA,CAAf,CAAd;AAEA,qBAAS,qCAAT;AAEA,sBAAU,UAAAA,KAAK;AAAA,SAAIJ,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,KAA3B,CAAJ;AAAA,CAAf;AAEA,qBAAS,oCAAsB,CAAtB,CAAT;AAEAD,KAAK;AAEL,qBAAS,oCAAsB,EAAtB,CAAT","file":"demo.1f2fc787.map","sourceRoot":"..","sourcesContent":["export function createIncrementAction(value = 1) {\r\n    const action = {\r\n      type: 'INCREMENT',\r\n      payload: {\r\n        value: value\r\n      },\r\n      error: null\r\n    };\r\n    return action;\r\n  }\r\n  ","let store = {\r\n  counter: 0,\r\n  name: 'Maurice'\r\n};\r\n\r\nlet listeners = [];\r\n\r\nexport function subscribe(listener) {\r\n  listeners.push(listener);\r\n\r\n  return () => (listeners = listeners.filter(l => l !== listener));\r\n}\r\n\r\nexport function dispatch(action) {\r\n  console.log('dispatch', action);\r\n\r\n  if (action.type === 'INCREMENT') {\r\n    // Fout\r\n    // store.counter = store.counter + action.payload.value;\r\n\r\n    // store = Object.assign({}, store, {\r\n    //   counter: store.counter + action.payload.value\r\n    // });\r\n\r\n    store = { ...store, counter: store.counter + action.payload.value };\r\n  }\r\n\r\n  listeners.forEach(l => l(store));\r\n}\r\n","import { createIncrementAction } from './actions';\r\nimport { subscribe, dispatch } from './store';\r\n\r\nconst unsub = subscribe(state => console.log('Listener 1 ', state));\r\n\r\ndispatch(createIncrementAction());\r\n\r\nsubscribe(state => console.log('Listener 2 ', state));\r\n\r\ndispatch(createIncrementAction(5));\r\n\r\nunsub();\r\n\r\ndispatch(createIncrementAction(15));\r\n"]}